"use client";

import React from "react";
import "@radix-ui/themes/styles.css";
import { Select } from "@radix-ui/themes";

import THEMES from "../helpers/themes";

const ProblemMenu = ({
    fullScreen,
    setFullScreen,
    autosave,
    setAutosave,
    problemID,
    setTheme,
    setTabSize,
    tabSize,
}: {
    fullScreen;
    setFullScreen;
    autosave;
    setAutosave;
    problemID;
    setTheme;
    tabSize;
    setTabSize;
}) => {
    return (
        <div className="flex gap-6 m-2">
            <div className="flex items-center p-2 rounded">
                <input
                    type="checkbox"
                    checked={autosave}
                    onChange={(e) => {
                        const newSaveValue = !autosave;
                        localStorage.setItem(
                            `${problemID}-editor-autosave`,
                            newSaveValue ? "true" : "false"
                        );
                        setAutosave(newSaveValue);
                        if (newSaveValue) {
                            localStorage.removeItem(`${problemID}-editor-code`);
                        }
                    }}
                    className="w-4 h-4 bg-gray-600 border-gray-500"
                />
                <label className="ml-2 text-md font-poppins text-white">
                    Save Code
                </label>
            </div>

            <div className="flex gap-2 items-center">
                <h1 className="text-white font-poppins">Tabsize:</h1>
                <Select.Root
                    defaultValue={String(tabSize)}
                    value={String(tabSize)}
                    onValueChange={(value) => {
                        setTabSize(Number(value));
                        localStorage.setItem(
                            `${problemID}-editor-tabsize`,
                            value
                        );
                    }}
                >
                    <Select.Trigger placeholder="Select Tabsize" />
                    <Select.Content>
                        <Select.Group>
                            <Select.Label>Tab Sizes</Select.Label>
                            {[2, 3, 4, 5, 6, 7, 8, 9, 10].map((key) => {
                                return (
                                    <Select.Item key={key} value={String(key)}>
                                        {key}
                                    </Select.Item>
                                );
                            })}
                        </Select.Group>
                    </Select.Content>
                </Select.Root>
            </div>
            <div className="flex gap-2 items-center">
                <h1 className="text-white font-poppins">Theme:</h1>
                <Select.Root
                    defaultValue="atomone"
                    onValueChange={(value) => {
                        setTheme(THEMES[value]);
                    }}
                >
                    <Select.Trigger placeholder="Select a theme" />
                    <Select.Content>
                        <Select.Group>
                            <Select.Label>Themes</Select.Label>
                            {Object.keys(THEMES).map((key) => {
                                return (
                                    <Select.Item key={key} value={key}>
                                        {key}
                                    </Select.Item>
                                );
                            })}
                        </Select.Group>
                    </Select.Content>
                </Select.Root>
            </div>
            <button onClick={() => setFullScreen(!fullScreen)}>
                <svg
                    className="fill-white w-6"
                    xmlns="http://www.w3.org/2000/svg"
                    preserveAspectRatio="xMidYMid"
                    viewBox="0 0 31.812 31.906"
                >
                    {fullScreen ? (
                        <path d="M23.263,9.969 L27.823,9.969 C28.372,9.969 28.817,10.415 28.817,10.966 C28.817,11.516 28.456,11.906 27.906,11.906 L21.154,11.906 C21.058,11.935 20.962,11.963 20.863,11.963 C20.608,11.963 20.354,11.865 20.160,11.671 C19.916,11.426 19.843,11.088 19.906,10.772 L19.906,3.906 C19.906,3.355 20.313,2.989 20.863,2.989 C21.412,2.989 21.857,3.435 21.857,3.986 L21.857,8.559 L30.103,0.289 C30.491,-0.100 31.120,-0.100 31.509,0.289 C31.897,0.679 31.897,1.310 31.509,1.699 L23.263,9.969 ZM11.914,27.917 C11.914,28.468 11.469,28.914 10.920,28.914 C10.370,28.914 9.926,28.468 9.926,27.917 L9.926,23.344 L1.680,31.613 C1.486,31.808 1.231,31.906 0.977,31.906 C0.723,31.906 0.468,31.808 0.274,31.613 C-0.114,31.224 -0.114,30.593 0.274,30.203 L8.520,21.934 L3.960,21.934 C3.410,21.934 2.966,21.488 2.966,20.937 C2.966,20.386 3.410,19.940 3.960,19.940 L10.920,19.940 C10.920,19.940 10.921,19.940 10.921,19.940 C11.050,19.940 11.179,19.967 11.300,20.017 C11.543,20.118 11.737,20.312 11.838,20.556 C11.888,20.678 11.914,20.807 11.914,20.937 L11.914,27.917 ZM10.920,11.963 C10.821,11.963 10.724,11.935 10.629,11.906 L3.906,11.906 C3.356,11.906 2.966,11.516 2.966,10.966 C2.966,10.415 3.410,9.969 3.960,9.969 L8.520,9.969 L0.274,1.699 C-0.114,1.310 -0.114,0.679 0.274,0.289 C0.662,-0.100 1.292,-0.100 1.680,0.289 L9.926,8.559 L9.926,3.986 C9.926,3.435 10.370,2.989 10.920,2.989 C11.469,2.989 11.914,3.435 11.914,3.986 L11.914,10.965 C11.914,11.221 11.817,11.476 11.623,11.671 C11.429,11.865 11.174,11.963 10.920,11.963 ZM20.174,20.222 C20.345,20.047 20.585,19.940 20.863,19.940 L27.823,19.940 C28.372,19.940 28.817,20.386 28.817,20.937 C28.817,21.488 28.372,21.934 27.823,21.934 L23.263,21.934 L31.509,30.203 C31.897,30.593 31.897,31.224 31.509,31.613 C31.314,31.808 31.060,31.906 30.806,31.906 C30.551,31.906 30.297,31.808 30.103,31.613 L21.857,23.344 L21.857,27.917 C21.857,28.468 21.412,28.914 20.863,28.914 C20.313,28.914 19.906,28.457 19.906,27.906 L19.906,21.130 C19.843,20.815 19.916,20.477 20.160,20.232 C20.164,20.228 20.170,20.227 20.174,20.222 Z" />
                    ) : (
                        <path d="M31.728,31.291 C31.628,31.535 31.434,31.729 31.190,31.830 C31.069,31.881 30.940,31.907 30.811,31.907 L23.851,31.907 C23.301,31.907 22.856,31.461 22.856,30.910 C22.856,30.359 23.301,29.913 23.851,29.913 L28.405,29.908 L19.171,20.646 C18.782,20.257 18.782,19.626 19.171,19.236 C19.559,18.847 20.188,18.847 20.577,19.236 L29.906,28.593 L29.906,23.906 C29.906,23.355 30.261,22.933 30.811,22.933 C31.360,22.933 31.805,23.379 31.805,23.930 L31.805,30.910 C31.805,31.040 31.779,31.169 31.728,31.291 ZM30.811,8.973 C30.261,8.973 29.906,8.457 29.906,7.906 L29.906,3.313 L20.577,12.669 C20.382,12.864 20.128,12.962 19.874,12.962 C19.619,12.962 19.365,12.864 19.171,12.669 C18.782,12.280 18.782,11.649 19.171,11.259 L28.497,1.906 L23.906,1.906 C23.356,1.906 22.856,1.546 22.856,0.996 C22.856,0.445 23.301,-0.001 23.851,-0.001 L30.811,-0.001 C30.811,-0.001 30.811,-0.001 30.812,-0.001 C30.941,-0.001 31.069,0.025 31.190,0.076 C31.434,0.177 31.628,0.371 31.728,0.615 C31.779,0.737 31.805,0.866 31.805,0.996 L31.805,7.976 C31.805,8.526 31.360,8.973 30.811,8.973 ZM3.387,29.908 L7.942,29.913 C8.492,29.913 8.936,30.359 8.936,30.910 C8.936,31.461 8.492,31.907 7.942,31.907 L0.982,31.907 C0.853,31.907 0.724,31.881 0.602,31.830 C0.359,31.729 0.165,31.535 0.064,31.291 C0.014,31.169 -0.012,31.040 -0.012,30.910 L-0.012,23.930 C-0.012,23.379 0.433,22.933 0.982,22.933 C1.532,22.933 1.906,23.355 1.906,23.906 L1.906,28.573 L11.216,19.236 C11.605,18.847 12.234,18.847 12.622,19.236 C13.011,19.626 13.011,20.257 12.622,20.646 L3.387,29.908 ZM11.919,12.962 C11.665,12.962 11.410,12.864 11.216,12.669 L1.906,3.332 L1.906,7.906 C1.906,8.457 1.532,8.973 0.982,8.973 C0.433,8.973 -0.012,8.526 -0.012,7.976 L-0.012,0.996 C-0.012,0.866 0.014,0.737 0.064,0.615 C0.165,0.371 0.359,0.177 0.602,0.076 C0.723,0.025 0.852,-0.001 0.980,-0.001 C0.981,-0.001 0.981,-0.001 0.982,-0.001 L7.942,-0.001 C8.492,-0.001 8.936,0.445 8.936,0.996 C8.936,1.546 8.456,1.906 7.906,1.906 L3.296,1.906 L12.622,11.259 C13.011,11.649 13.011,12.280 12.622,12.669 C12.428,12.864 12.174,12.962 11.919,12.962 Z" />
                    )}
                </svg>
            </button>
        </div>
    );
};

export default ProblemMenu;
